//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.condition
{

public sealed partial class ContainsItem :  condition.RoleCondition 
{
    public ContainsItem()
    {
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["item_id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  ItemId = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["num"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Num = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["reverse"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsBoolean) { throw new SerializationException(); }  Reverse = _fieldJson;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        _json["$type"] = "condition.ContainsItem";
        {
            _json["item_id"] = new JSONNumber(ItemId);
        }
        {
            _json["num"] = new JSONNumber(Num);
        }
        {
            _json["reverse"] = new JSONBool(Reverse);
        }
    }

    public static ContainsItem LoadJsonContainsItem(SimpleJSON.JSONNode _json)
    {
        ContainsItem obj = new condition.ContainsItem();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonContainsItem(ContainsItem _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int ItemId { get; set; }

    public int Num { get; set; }

    public bool Reverse { get; set; }

}
}
