//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.test
{

public sealed partial class DemoGroup :  Bright.Config.EditorBeanBase 
{
    public DemoGroup()
    {
            X5 = new test.InnerGroup();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  X1 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  X2 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x3"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  X3 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x4"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  X4 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x5"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  X5 = test.InnerGroup.LoadJsonInnerGroup(_fieldJson);
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        _json["$type"] = "test.DemoGroup";
        {
            _json["id"] = new JSONNumber(Id);
        }
        {
            _json["x1"] = new JSONNumber(X1);
        }
        {
            _json["x2"] = new JSONNumber(X2);
        }
        {
            _json["x3"] = new JSONNumber(X3);
        }
        {
            _json["x4"] = new JSONNumber(X4);
        }
        {

            if (X5 == null) { throw new System.ArgumentNullException(); }
            { var __bjson = new JSONObject();  test.InnerGroup.SaveJsonInnerGroup(X5, __bjson); _json["x5"] = __bjson; }
        }
    }

    public static DemoGroup LoadJsonDemoGroup(SimpleJSON.JSONNode _json)
    {
        DemoGroup obj = new test.DemoGroup();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonDemoGroup(DemoGroup _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int Id { get; set; }

    public int X1 { get; set; }

    public int X2 { get; set; }

    public int X3 { get; set; }

    public int X4 { get; set; }

    public test.InnerGroup X5 { get; set; }

}
}
