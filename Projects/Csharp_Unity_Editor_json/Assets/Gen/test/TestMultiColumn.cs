//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.test
{

public sealed partial class TestMultiColumn :  Bright.Config.EditorBeanBase 
{
    public TestMultiColumn()
    {
            A = new test.Foo();
            B = new test.Foo();
            C = new test.Foo();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["a"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  A = test.Foo.LoadJsonFoo(_fieldJson);
            }
        }
        
        { 
            var _fieldJson = _json["b"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  B = test.Foo.LoadJsonFoo(_fieldJson);
            }
        }
        
        { 
            var _fieldJson = _json["c"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  C = test.Foo.LoadJsonFoo(_fieldJson);
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        _json["$type"] = "test.TestMultiColumn";
        {
            _json["id"] = new JSONNumber(Id);
        }
        {

            if (A == null) { throw new System.ArgumentNullException(); }
            { var __bjson = new JSONObject();  test.Foo.SaveJsonFoo(A, __bjson); _json["a"] = __bjson; }
        }
        {

            if (B == null) { throw new System.ArgumentNullException(); }
            { var __bjson = new JSONObject();  test.Foo.SaveJsonFoo(B, __bjson); _json["b"] = __bjson; }
        }
        {

            if (C == null) { throw new System.ArgumentNullException(); }
            { var __bjson = new JSONObject();  test.Foo.SaveJsonFoo(C, __bjson); _json["c"] = __bjson; }
        }
    }

    public static TestMultiColumn LoadJsonTestMultiColumn(SimpleJSON.JSONNode _json)
    {
        TestMultiColumn obj = new test.TestMultiColumn();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonTestMultiColumn(TestMultiColumn _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int Id { get; set; }

    public test.Foo A { get; set; }

    public test.Foo B { get; set; }

    public test.Foo C { get; set; }

}
}
