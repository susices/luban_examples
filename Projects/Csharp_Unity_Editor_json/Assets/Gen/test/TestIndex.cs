//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.test
{

public sealed partial class TestIndex :  Bright.Config.EditorBeanBase 
{
    public TestIndex()
    {
            Eles = new System.Collections.Generic.List<test.DemoType1>();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["eles"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } Eles = new System.Collections.Generic.List<test.DemoType1>(); foreach(JSONNode __e in _fieldJson.Children) { test.DemoType1 __v;  if(!__e.IsObject) { throw new SerializationException(); }  __v = test.DemoType1.LoadJsonDemoType1(__e);  Eles.Add(__v); }  
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        _json["$type"] = "test.TestIndex";
        {
            _json["id"] = new JSONNumber(Id);
        }
        {

            if (Eles == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in Eles) { { var __bjson = new JSONObject();  test.DemoType1.SaveJsonDemoType1(_e, __bjson); __cjson["null"] = __bjson; } } _json["eles"] = __cjson; }
        }
    }

    public static TestIndex LoadJsonTestIndex(SimpleJSON.JSONNode _json)
    {
        TestIndex obj = new test.TestIndex();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonTestIndex(TestIndex _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int Id { get; set; }

    public System.Collections.Generic.List<test.DemoType1> Eles { get; set; }

}
}
