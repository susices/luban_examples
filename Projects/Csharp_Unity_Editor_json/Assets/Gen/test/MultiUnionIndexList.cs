//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.test
{

public sealed partial class MultiUnionIndexList :  Bright.Config.EditorBeanBase 
{
    public MultiUnionIndexList()
    {
            Id3 = "";
            Desc = "";
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id1 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["id2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id2 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["id3"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  Id3 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["num"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Num = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["desc"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  Desc = _fieldJson;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        _json["$type"] = "test.MultiUnionIndexList";
        {
            _json["id1"] = new JSONNumber(Id1);
        }
        {
            _json["id2"] = new JSONNumber(Id2);
        }
        {

            if (Id3 == null) { throw new System.ArgumentNullException(); }
            _json["id3"] = new JSONString(Id3);
        }
        {
            _json["num"] = new JSONNumber(Num);
        }
        {

            if (Desc == null) { throw new System.ArgumentNullException(); }
            _json["desc"] = new JSONString(Desc);
        }
    }

    public static MultiUnionIndexList LoadJsonMultiUnionIndexList(SimpleJSON.JSONNode _json)
    {
        MultiUnionIndexList obj = new test.MultiUnionIndexList();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonMultiUnionIndexList(MultiUnionIndexList _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int Id1 { get; set; }

    public long Id2 { get; set; }

    public string Id3 { get; set; }

    public int Num { get; set; }

    public string Desc { get; set; }

}
}
