//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.common
{

public sealed partial class GlobalConfig :  Bright.Config.EditorBeanBase 
{
    public GlobalConfig()
    {
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["bag_capacity"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  BagCapacity = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["bag_capacity_special"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  BagCapacitySpecial = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["bag_temp_expendable_capacity"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  BagTempExpendableCapacity = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["bag_temp_tool_capacity"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  BagTempToolCapacity = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["bag_init_capacity"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  BagInitCapacity = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["quick_bag_capacity"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  QuickBagCapacity = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["cloth_bag_capacity"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  ClothBagCapacity = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["cloth_bag_init_capacity"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  ClothBagInitCapacity = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["cloth_bag_capacity_special"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  ClothBagCapacitySpecial = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["bag_init_items_drop_id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  BagInitItemsDropId = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["mail_box_capacity"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  MailBoxCapacity = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["damage_param_c"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  DamageParamC = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["damage_param_e"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  DamageParamE = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["damage_param_f"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  DamageParamF = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["damage_param_d"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  DamageParamD = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["role_speed"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  RoleSpeed = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["monster_speed"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  MonsterSpeed = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["init_energy"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  InitEnergy = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["init_viality"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  InitViality = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["max_viality"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  MaxViality = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["per_viality_recovery_time"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  PerVialityRecoveryTime = _fieldJson;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        _json["$type"] = "common.GlobalConfig";
        {
            _json["bag_capacity"] = new JSONNumber(BagCapacity);
        }
        {
            _json["bag_capacity_special"] = new JSONNumber(BagCapacitySpecial);
        }
        {
            _json["bag_temp_expendable_capacity"] = new JSONNumber(BagTempExpendableCapacity);
        }
        {
            _json["bag_temp_tool_capacity"] = new JSONNumber(BagTempToolCapacity);
        }
        {
            _json["bag_init_capacity"] = new JSONNumber(BagInitCapacity);
        }
        {
            _json["quick_bag_capacity"] = new JSONNumber(QuickBagCapacity);
        }
        {
            _json["cloth_bag_capacity"] = new JSONNumber(ClothBagCapacity);
        }
        {
            _json["cloth_bag_init_capacity"] = new JSONNumber(ClothBagInitCapacity);
        }
        {
            _json["cloth_bag_capacity_special"] = new JSONNumber(ClothBagCapacitySpecial);
        }

        if (BagInitItemsDropId != null)
        {
            _json["bag_init_items_drop_id"] = new JSONNumber(BagInitItemsDropId.Value);
        }
        {
            _json["mail_box_capacity"] = new JSONNumber(MailBoxCapacity);
        }
        {
            _json["damage_param_c"] = new JSONNumber(DamageParamC);
        }
        {
            _json["damage_param_e"] = new JSONNumber(DamageParamE);
        }
        {
            _json["damage_param_f"] = new JSONNumber(DamageParamF);
        }
        {
            _json["damage_param_d"] = new JSONNumber(DamageParamD);
        }
        {
            _json["role_speed"] = new JSONNumber(RoleSpeed);
        }
        {
            _json["monster_speed"] = new JSONNumber(MonsterSpeed);
        }
        {
            _json["init_energy"] = new JSONNumber(InitEnergy);
        }
        {
            _json["init_viality"] = new JSONNumber(InitViality);
        }
        {
            _json["max_viality"] = new JSONNumber(MaxViality);
        }
        {
            _json["per_viality_recovery_time"] = new JSONNumber(PerVialityRecoveryTime);
        }
    }

    public static GlobalConfig LoadJsonGlobalConfig(SimpleJSON.JSONNode _json)
    {
        GlobalConfig obj = new common.GlobalConfig();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonGlobalConfig(GlobalConfig _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 背包容量
    /// </summary>
    public int BagCapacity { get; set; }

    public int BagCapacitySpecial { get; set; }

    public int BagTempExpendableCapacity { get; set; }

    public int BagTempToolCapacity { get; set; }

    public int BagInitCapacity { get; set; }

    public int QuickBagCapacity { get; set; }

    public int ClothBagCapacity { get; set; }

    public int ClothBagInitCapacity { get; set; }

    public int ClothBagCapacitySpecial { get; set; }

    public int? BagInitItemsDropId { get; set; }

    public int MailBoxCapacity { get; set; }

    public float DamageParamC { get; set; }

    public float DamageParamE { get; set; }

    public float DamageParamF { get; set; }

    public float DamageParamD { get; set; }

    public float RoleSpeed { get; set; }

    public float MonsterSpeed { get; set; }

    public int InitEnergy { get; set; }

    public int InitViality { get; set; }

    public int MaxViality { get; set; }

    public int PerVialityRecoveryTime { get; set; }

}
}
