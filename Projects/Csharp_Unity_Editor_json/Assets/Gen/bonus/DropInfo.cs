//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.bonus
{

public sealed partial class DropInfo :  Bright.Config.EditorBeanBase 
{
    public DropInfo()
    {
            Desc = "";
            ClientShowItems = new System.Collections.Generic.List<bonus.ShowItemInfo>();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["desc"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  Desc = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["client_show_items"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } ClientShowItems = new System.Collections.Generic.List<bonus.ShowItemInfo>(); foreach(JSONNode __e in _fieldJson.Children) { bonus.ShowItemInfo __v;  if(!__e.IsObject) { throw new SerializationException(); }  __v = bonus.ShowItemInfo.LoadJsonShowItemInfo(__e);  ClientShowItems.Add(__v); }  
            }
        }
        
        { 
            var _fieldJson = _json["bonus"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  Bonus = bonus.Bonus.LoadJsonBonus(_fieldJson);
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        _json["$type"] = "bonus.DropInfo";
        {
            _json["id"] = new JSONNumber(Id);
        }
        {

            if (Desc == null) { throw new System.ArgumentNullException(); }
            _json["desc"] = new JSONString(Desc);
        }
        {

            if (ClientShowItems == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in ClientShowItems) { { var __bjson = new JSONObject();  bonus.ShowItemInfo.SaveJsonShowItemInfo(_e, __bjson); __cjson["null"] = __bjson; } } _json["client_show_items"] = __cjson; }
        }
        {

            if (Bonus == null) { throw new System.ArgumentNullException(); }
            { var __bjson = new JSONObject();  bonus.Bonus.SaveJsonBonus(Bonus, __bjson); _json["bonus"] = __bjson; }
        }
    }

    public static DropInfo LoadJsonDropInfo(SimpleJSON.JSONNode _json)
    {
        DropInfo obj = new bonus.DropInfo();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonDropInfo(DropInfo _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int Id { get; set; }

    public string Desc { get; set; }

    public System.Collections.Generic.List<bonus.ShowItemInfo> ClientShowItems { get; set; }

    public bonus.Bonus Bonus { get; set; }

}
}
