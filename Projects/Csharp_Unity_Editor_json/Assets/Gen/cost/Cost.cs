//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.cost
{

public abstract partial class Cost :  Bright.Config.EditorBeanBase 
{
    public Cost()
    {
    }


    public static Cost LoadJsonCost(SimpleJSON.JSONNode _json)
    {
        string type = _json["$type"];
        Cost obj;
        switch (type)
        {
            case "cost.CostCurrency":   
            case "CostCurrency":obj = new cost.CostCurrency(); break;
            case "cost.CostCurrencies":   
            case "CostCurrencies":obj = new cost.CostCurrencies(); break;
            case "cost.CostOneItem":   
            case "CostOneItem":obj = new cost.CostOneItem(); break;
            case "cost.CostItem":   
            case "CostItem":obj = new cost.CostItem(); break;
            case "cost.CostItems":   
            case "CostItems":obj = new cost.CostItems(); break;
            default: throw new SerializationException();
        }
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonCost(Cost _obj, SimpleJSON.JSONNode _json)
    {
        _json["$type"] = _obj.GetType().Name;
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

}
}
