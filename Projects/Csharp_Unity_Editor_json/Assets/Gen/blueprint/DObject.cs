//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.blueprint
{

public sealed partial class DObject :  blueprint.DValue 
{
    public DObject()
    {
            Type = "";
            Fields = new System.Collections.Generic.List<blueprint.FieldValue>();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["type"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  Type = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["fields"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } Fields = new System.Collections.Generic.List<blueprint.FieldValue>(); foreach(JSONNode __e in _fieldJson.Children) { blueprint.FieldValue __v;  if(!__e.IsObject) { throw new SerializationException(); }  __v = blueprint.FieldValue.LoadJsonFieldValue(__e);  Fields.Add(__v); }  
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        _json["$type"] = "blueprint.DObject";
        {

            if (Type == null) { throw new System.ArgumentNullException(); }
            _json["type"] = new JSONString(Type);
        }
        {

            if (Fields == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in Fields) { { var __bjson = new JSONObject();  blueprint.FieldValue.SaveJsonFieldValue(_e, __bjson); __cjson["null"] = __bjson; } } _json["fields"] = __cjson; }
        }
    }

    public static DObject LoadJsonDObject(SimpleJSON.JSONNode _json)
    {
        DObject obj = new blueprint.DObject();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonDObject(DObject _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public string Type { get; set; }

    public System.Collections.Generic.List<blueprint.FieldValue> Fields { get; set; }

}
}
