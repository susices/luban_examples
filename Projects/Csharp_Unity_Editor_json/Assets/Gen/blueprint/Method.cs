//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.blueprint
{

public abstract partial class Method :  Bright.Config.EditorBeanBase 
{
    public Method()
    {
            Name = "";
            Desc = "";
            ReturnType = "";
            Parameters = new System.Collections.Generic.List<blueprint.ParamInfo>();
    }


    public static Method LoadJsonMethod(SimpleJSON.JSONNode _json)
    {
        string type = _json["$type"];
        Method obj;
        switch (type)
        {
            case "blueprint.AbstraceMethod":   
            case "AbstraceMethod":obj = new blueprint.AbstraceMethod(); break;
            case "blueprint.ExternalMethod":   
            case "ExternalMethod":obj = new blueprint.ExternalMethod(); break;
            case "blueprint.BlueprintMethod":   
            case "BlueprintMethod":obj = new blueprint.BlueprintMethod(); break;
            default: throw new SerializationException();
        }
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonMethod(Method _obj, SimpleJSON.JSONNode _json)
    {
        _json["$type"] = _obj.GetType().Name;
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public string Name { get; set; }

    public string Desc { get; set; }

    public bool IsStatic { get; set; }

    public string ReturnType { get; set; }

    public System.Collections.Generic.List<blueprint.ParamInfo> Parameters { get; set; }

}
}
