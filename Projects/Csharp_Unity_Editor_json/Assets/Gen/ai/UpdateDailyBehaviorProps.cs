//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.ai
{

public sealed partial class UpdateDailyBehaviorProps :  ai.Service 
{
    public UpdateDailyBehaviorProps()
    {
            SatietyKey = "";
            EnergyKey = "";
            MoodKey = "";
            SatietyLowerThresholdKey = "";
            SatietyUpperThresholdKey = "";
            EnergyLowerThresholdKey = "";
            EnergyUpperThresholdKey = "";
            MoodLowerThresholdKey = "";
            MoodUpperThresholdKey = "";
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["node_name"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  NodeName = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["satiety_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  SatietyKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["energy_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  EnergyKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["mood_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  MoodKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["satiety_lower_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  SatietyLowerThresholdKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["satiety_upper_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  SatietyUpperThresholdKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["energy_lower_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  EnergyLowerThresholdKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["energy_upper_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  EnergyUpperThresholdKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["mood_lower_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  MoodLowerThresholdKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["mood_upper_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  MoodUpperThresholdKey = _fieldJson;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        _json["$type"] = "ai.UpdateDailyBehaviorProps";
        {
            _json["id"] = new JSONNumber(Id);
        }
        {

            if (NodeName == null) { throw new System.ArgumentNullException(); }
            _json["node_name"] = new JSONString(NodeName);
        }
        {

            if (SatietyKey == null) { throw new System.ArgumentNullException(); }
            _json["satiety_key"] = new JSONString(SatietyKey);
        }
        {

            if (EnergyKey == null) { throw new System.ArgumentNullException(); }
            _json["energy_key"] = new JSONString(EnergyKey);
        }
        {

            if (MoodKey == null) { throw new System.ArgumentNullException(); }
            _json["mood_key"] = new JSONString(MoodKey);
        }
        {

            if (SatietyLowerThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["satiety_lower_threshold_key"] = new JSONString(SatietyLowerThresholdKey);
        }
        {

            if (SatietyUpperThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["satiety_upper_threshold_key"] = new JSONString(SatietyUpperThresholdKey);
        }
        {

            if (EnergyLowerThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["energy_lower_threshold_key"] = new JSONString(EnergyLowerThresholdKey);
        }
        {

            if (EnergyUpperThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["energy_upper_threshold_key"] = new JSONString(EnergyUpperThresholdKey);
        }
        {

            if (MoodLowerThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["mood_lower_threshold_key"] = new JSONString(MoodLowerThresholdKey);
        }
        {

            if (MoodUpperThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["mood_upper_threshold_key"] = new JSONString(MoodUpperThresholdKey);
        }
    }

    public static UpdateDailyBehaviorProps LoadJsonUpdateDailyBehaviorProps(SimpleJSON.JSONNode _json)
    {
        UpdateDailyBehaviorProps obj = new ai.UpdateDailyBehaviorProps();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonUpdateDailyBehaviorProps(UpdateDailyBehaviorProps _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public string SatietyKey { get; set; }

    public string EnergyKey { get; set; }

    public string MoodKey { get; set; }

    public string SatietyLowerThresholdKey { get; set; }

    public string SatietyUpperThresholdKey { get; set; }

    public string EnergyLowerThresholdKey { get; set; }

    public string EnergyUpperThresholdKey { get; set; }

    public string MoodLowerThresholdKey { get; set; }

    public string MoodUpperThresholdKey { get; set; }

}
}
