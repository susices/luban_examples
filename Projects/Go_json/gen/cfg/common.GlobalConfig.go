//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import "errors"

type CommonGlobalConfig struct {
    BagCapacity int32
    BagCapacitySpecial int32
    BagTempExpendableCapacity int32
    BagTempToolCapacity int32
    BagInitCapacity int32
    QuickBagCapacity int32
    ClothBagCapacity int32
    ClothBagInitCapacity int32
    ClothBagCapacitySpecial int32
    BagInitItemsDropId *int32
    MailBoxCapacity int32
    DamageParamC float32
    DamageParamE float32
    DamageParamF float32
    DamageParamD float32
    RoleSpeed float32
    MonsterSpeed float32
    InitEnergy int32
    InitViality int32
    MaxViality int32
    PerVialityRecoveryTime int32
}

const TypeId_CommonGlobalConfig = -848234488

func (*CommonGlobalConfig) GetTypeId() int32 {
    return -848234488
}

func (_v *CommonGlobalConfig)Deserialize(_buf map[string]interface{}) (err error) {
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["bag_capacity"].(float64); !_ok_ { err = errors.New("bag_capacity error"); return }; _v.BagCapacity = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["bag_capacity_special"].(float64); !_ok_ { err = errors.New("bag_capacity_special error"); return }; _v.BagCapacitySpecial = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["bag_temp_expendable_capacity"].(float64); !_ok_ { err = errors.New("bag_temp_expendable_capacity error"); return }; _v.BagTempExpendableCapacity = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["bag_temp_tool_capacity"].(float64); !_ok_ { err = errors.New("bag_temp_tool_capacity error"); return }; _v.BagTempToolCapacity = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["bag_init_capacity"].(float64); !_ok_ { err = errors.New("bag_init_capacity error"); return }; _v.BagInitCapacity = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["quick_bag_capacity"].(float64); !_ok_ { err = errors.New("quick_bag_capacity error"); return }; _v.QuickBagCapacity = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["cloth_bag_capacity"].(float64); !_ok_ { err = errors.New("cloth_bag_capacity error"); return }; _v.ClothBagCapacity = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["cloth_bag_init_capacity"].(float64); !_ok_ { err = errors.New("cloth_bag_init_capacity error"); return }; _v.ClothBagInitCapacity = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["cloth_bag_capacity_special"].(float64); !_ok_ { err = errors.New("cloth_bag_capacity_special error"); return }; _v.ClothBagCapacitySpecial = int32(_tempNum_) }
    { var _ok_ bool; var __json_bag_init_items_drop_id__ interface{}; if __json_bag_init_items_drop_id__, _ok_ = _buf["bag_init_items_drop_id"]; !_ok_ || __json_bag_init_items_drop_id__ == nil { _v.BagInitItemsDropId = nil } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_bag_init_items_drop_id__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.BagInitItemsDropId = &__x__ }}
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["mail_box_capacity"].(float64); !_ok_ { err = errors.New("mail_box_capacity error"); return }; _v.MailBoxCapacity = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["damage_param_c"].(float64); !_ok_ { err = errors.New("damage_param_c error"); return }; _v.DamageParamC = float32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["damage_param_e"].(float64); !_ok_ { err = errors.New("damage_param_e error"); return }; _v.DamageParamE = float32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["damage_param_f"].(float64); !_ok_ { err = errors.New("damage_param_f error"); return }; _v.DamageParamF = float32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["damage_param_d"].(float64); !_ok_ { err = errors.New("damage_param_d error"); return }; _v.DamageParamD = float32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["role_speed"].(float64); !_ok_ { err = errors.New("role_speed error"); return }; _v.RoleSpeed = float32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["monster_speed"].(float64); !_ok_ { err = errors.New("monster_speed error"); return }; _v.MonsterSpeed = float32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["init_energy"].(float64); !_ok_ { err = errors.New("init_energy error"); return }; _v.InitEnergy = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["init_viality"].(float64); !_ok_ { err = errors.New("init_viality error"); return }; _v.InitViality = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["max_viality"].(float64); !_ok_ { err = errors.New("max_viality error"); return }; _v.MaxViality = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["per_viality_recovery_time"].(float64); !_ok_ { err = errors.New("per_viality_recovery_time error"); return }; _v.PerVialityRecoveryTime = int32(_tempNum_) }
    return
}

func DeserializeCommonGlobalConfig(_buf map[string]interface{}) (*CommonGlobalConfig, error) {
    v := &CommonGlobalConfig{}
    if err := v.Deserialize(_buf); err == nil {
        return v, nil
    } else {
        return nil, err
    }
}
