//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import "errors"

type AiService struct {
    Id int32
    NodeName string
}

const TypeId_AiService = -472395057

func (*AiService) GetTypeId() int32 {
    return -472395057
}

func (_v *AiService)Deserialize(_buf map[string]interface{}) (err error) {
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["id"].(float64); !_ok_ { err = errors.New("id error"); return }; _v.Id = int32(_tempNum_) }
    { var _ok_ bool; if _v.NodeName, _ok_ = _buf["node_name"].(string); !_ok_ { err = errors.New("node_name error"); return } }
    return
}

func DeserializeAiService(_buf map[string]interface{}) (interface{}, error) {
    var id string
    var _ok_ bool
    if id, _ok_ = _buf["$type"].(string) ; !_ok_ {
        return nil, errors.New("type id missing")
    }
    switch id {
        case "UeSetDefaultFocus": _v := &AiUeSetDefaultFocus{}; if err := _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.UeSetDefaultFocus") } else { return _v, nil }
        case "ExecuteTimeStatistic": _v := &AiExecuteTimeStatistic{}; if err := _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.ExecuteTimeStatistic") } else { return _v, nil }
        case "ChooseTarget": _v := &AiChooseTarget{}; if err := _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.ChooseTarget") } else { return _v, nil }
        case "KeepFaceTarget": _v := &AiKeepFaceTarget{}; if err := _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.KeepFaceTarget") } else { return _v, nil }
        case "GetOwnerPlayer": _v := &AiGetOwnerPlayer{}; if err := _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.GetOwnerPlayer") } else { return _v, nil }
        case "UpdateDailyBehaviorProps": _v := &AiUpdateDailyBehaviorProps{}; if err := _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.UpdateDailyBehaviorProps") } else { return _v, nil }
        default: return nil, errors.New("unknown type id")
    }
}
